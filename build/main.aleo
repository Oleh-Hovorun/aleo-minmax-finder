program minmax_finder.aleo;



function minmax:
    input r0 as i64.private;
    input r1 as i64.private;
    input r2 as i64.private;
    input r3 as i64.private;
    input r4 as i64.private;
    input r5 as i64.private;
    input r6 as i64.private;
    input r7 as i64.private;
    input r8 as i64.private;
    input r9 as i64.private;
    input r10 as i64.private;
    input r11 as i64.private;
    input r12 as i64.private;
    input r13 as i64.private;
    input r14 as i64.private;
    input r15 as i64.private;
    lt r0 9223372036854775807i64 into r16;
    is.neq r0 -9223372036854775808i64 into r17;
    and r16 r17 into r18;
    ternary r18 r0 9223372036854775807i64 into r19;
    gt r0 -9223372036854775808i64 into r20;
    is.neq r0 9223372036854775807i64 into r21;
    and r20 r21 into r22;
    ternary r22 r0 -9223372036854775808i64 into r23;
    lt r1 r19 into r24;
    is.neq r1 -9223372036854775808i64 into r25;
    and r24 r25 into r26;
    ternary r26 r1 r19 into r27;
    gt r1 r23 into r28;
    is.neq r1 9223372036854775807i64 into r29;
    and r28 r29 into r30;
    ternary r30 r1 r23 into r31;
    lt r2 r27 into r32;
    is.neq r2 -9223372036854775808i64 into r33;
    and r32 r33 into r34;
    ternary r34 r2 r27 into r35;
    gt r2 r31 into r36;
    is.neq r2 9223372036854775807i64 into r37;
    and r36 r37 into r38;
    ternary r38 r2 r31 into r39;
    lt r3 r35 into r40;
    is.neq r3 -9223372036854775808i64 into r41;
    and r40 r41 into r42;
    ternary r42 r3 r35 into r43;
    gt r3 r39 into r44;
    is.neq r3 9223372036854775807i64 into r45;
    and r44 r45 into r46;
    ternary r46 r3 r39 into r47;
    lt r4 r43 into r48;
    is.neq r4 -9223372036854775808i64 into r49;
    and r48 r49 into r50;
    ternary r50 r4 r43 into r51;
    gt r4 r47 into r52;
    is.neq r4 9223372036854775807i64 into r53;
    and r52 r53 into r54;
    ternary r54 r4 r47 into r55;
    lt r5 r51 into r56;
    is.neq r5 -9223372036854775808i64 into r57;
    and r56 r57 into r58;
    ternary r58 r5 r51 into r59;
    gt r5 r55 into r60;
    is.neq r5 9223372036854775807i64 into r61;
    and r60 r61 into r62;
    ternary r62 r5 r55 into r63;
    lt r6 r59 into r64;
    is.neq r6 -9223372036854775808i64 into r65;
    and r64 r65 into r66;
    ternary r66 r6 r59 into r67;
    gt r6 r63 into r68;
    is.neq r6 9223372036854775807i64 into r69;
    and r68 r69 into r70;
    ternary r70 r6 r63 into r71;
    lt r7 r67 into r72;
    is.neq r7 -9223372036854775808i64 into r73;
    and r72 r73 into r74;
    ternary r74 r7 r67 into r75;
    gt r7 r71 into r76;
    is.neq r7 9223372036854775807i64 into r77;
    and r76 r77 into r78;
    ternary r78 r7 r71 into r79;
    lt r8 r75 into r80;
    is.neq r8 -9223372036854775808i64 into r81;
    and r80 r81 into r82;
    ternary r82 r8 r75 into r83;
    gt r8 r79 into r84;
    is.neq r8 9223372036854775807i64 into r85;
    and r84 r85 into r86;
    ternary r86 r8 r79 into r87;
    lt r9 r83 into r88;
    is.neq r9 -9223372036854775808i64 into r89;
    and r88 r89 into r90;
    ternary r90 r9 r83 into r91;
    gt r9 r87 into r92;
    is.neq r9 9223372036854775807i64 into r93;
    and r92 r93 into r94;
    ternary r94 r9 r87 into r95;
    lt r10 r91 into r96;
    is.neq r10 -9223372036854775808i64 into r97;
    and r96 r97 into r98;
    ternary r98 r10 r91 into r99;
    gt r10 r95 into r100;
    is.neq r10 9223372036854775807i64 into r101;
    and r100 r101 into r102;
    ternary r102 r10 r95 into r103;
    lt r11 r99 into r104;
    is.neq r11 -9223372036854775808i64 into r105;
    and r104 r105 into r106;
    ternary r106 r11 r99 into r107;
    gt r11 r103 into r108;
    is.neq r11 9223372036854775807i64 into r109;
    and r108 r109 into r110;
    ternary r110 r11 r103 into r111;
    lt r12 r107 into r112;
    is.neq r12 -9223372036854775808i64 into r113;
    and r112 r113 into r114;
    ternary r114 r12 r107 into r115;
    gt r12 r111 into r116;
    is.neq r12 9223372036854775807i64 into r117;
    and r116 r117 into r118;
    ternary r118 r12 r111 into r119;
    lt r13 r115 into r120;
    is.neq r13 -9223372036854775808i64 into r121;
    and r120 r121 into r122;
    ternary r122 r13 r115 into r123;
    gt r13 r119 into r124;
    is.neq r13 9223372036854775807i64 into r125;
    and r124 r125 into r126;
    ternary r126 r13 r119 into r127;
    lt r14 r123 into r128;
    is.neq r14 -9223372036854775808i64 into r129;
    and r128 r129 into r130;
    ternary r130 r14 r123 into r131;
    gt r14 r127 into r132;
    is.neq r14 9223372036854775807i64 into r133;
    and r132 r133 into r134;
    ternary r134 r14 r127 into r135;
    lt r15 r131 into r136;
    is.neq r15 -9223372036854775808i64 into r137;
    and r136 r137 into r138;
    ternary r138 r15 r131 into r139;
    gt r15 r135 into r140;
    is.neq r15 9223372036854775807i64 into r141;
    and r140 r141 into r142;
    ternary r142 r15 r135 into r143;
    output r139 as i64.private;
    output r143 as i64.private;
